// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  previewFeatures = ["typedSql"]
  output        = "../src/app/generated/prisma"
  // definition required to relase to both plattforms amd64 and arm64
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FailureDescription {
  id String @id @default(nanoid(12))
  text String
}

model Maintenance {
  id         String   @id @default(nanoid(12))
  timestamp          DateTime
  testPassed         Boolean
  failureDescription String?
  FireHose   FireHose @relation(fields: [fireHoseId], references: [id])
  fireHoseId String
}

model FireHose {
  id               String        @id @default(nanoid(12))
  number           Int
  ownerId          String
  owner            Owner         @relation(fields: [ownerId], references: [id])
  length           Int
  diameter         String
  commissionedAt   DateTime
  decommissionedAt DateTime?
  maintenances     Maintenance[]

  @@index(name: "idx_owner_number_decommissioned", [ownerId, number, decommissionedAt])
}

model Owner {
  id       String     @id @default(nanoid(12))
  name     String     @unique
  marker   String     @unique
  FireHose FireHose[]
}
